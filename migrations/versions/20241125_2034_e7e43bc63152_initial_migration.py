"""Initial migration

Revision ID: e7e43bc63152
Revises: 
Create Date: 2024-11-25 20:34:09.711496

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects.postgresql import TIMESTAMP


# revision identifiers, used by Alembic.
revision: str = 'e7e43bc63152'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Create role table
    op.create_table('role',
    sa.Column('name', sa.Enum('ADMIN', 'MODERATOR', 'USER', name='roletype'), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=False),
    sa.Column('created_at', TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'),
              nullable=False),
    sa.Column('updated_at', TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'),
              onupdate=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_role')),
    sa.UniqueConstraint('name', name='uq_role_name'),
    schema=None
    )
    op.create_index(op.f('ix_role_id'), 'role', ['id'], unique=False)

    # Create user table
    op.create_table('user',
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('is_verified', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('auth0_id', sa.String(length=128), nullable=False),
    sa.Column('last_login', TIMESTAMP(timezone=True), nullable=True),
    sa.Column('email_verified_at', TIMESTAMP(timezone=True), nullable=True),
    sa.Column('created_at', TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'),
              nullable=False),
    sa.Column('updated_at', TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'),
              onupdate=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user')),
    sa.UniqueConstraint('auth0_id', name='uq_user_auth0_id'),
    sa.UniqueConstraint('email', name='uq_user_email'),
    sa.UniqueConstraint('username', name='uq_user_username'),
    schema=None
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)

    # Create user_roles association table
    op.create_table('user_roles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('created_at', TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'),
              nullable=False),
    sa.Column('updated_at', TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'),
              onupdate=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], name='fk_user_roles_role_id, ondelete CASCADE' ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fk_user_roles_user_id, ondelete CASCADE' ),
    sa.PrimaryKeyConstraint('user_id', 'role_id', name='pk_user_roles'),
    schema=None
    )

    # Create user_profile table
    op.create_table('user_profile',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('avatar_url', sa.String(length=255), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('created_at', TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'),
              nullable=False),
    sa.Column('updated_at', TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'),
              onupdate=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fk_user_profile_user_id, ondelete CASCADE' ),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_profile')),
    schema=None
    )
    op.create_index(op.f('ix_user_profile_id'), 'user_profile', ['id'], unique=False)
    op.create_index(op.f('ix_user_profile_user_id'), 'user_profile', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_profile_id'), table_name='user_profile')
    op.drop_index(op.f('ix_user_profile_user_id'), table_name='user_profile')
    op.drop_table('user_profile')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_role_id'), table_name='role')
    op.drop_table('role')
    op.drop_table('user_roles')

    # ### end Alembic commands ###
